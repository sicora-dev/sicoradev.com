---
const { title, url, span, desc, img, slug } = Astro.props;
---

<card
  class={`flex flex-col rounded-md border border-transparent p-2 shiny after:bg-light-shiny after:dark:bg-dark-shiny relative overflow-hidden items-center md:items-start text-center md:text-start`}
>
  <input
    aria-hidden="true"
    class="pointer-events-none absolute left-0 top-0 z-10 h-full w-full cursor-default rounded-[0.310rem] border transition-opacity duration-500 placeholder:select-none
    border-light-highlight opacity-0"
    style="
      mask-image: radial-gradient(30% 50px at 16px 19px, black 45%, transparent);
      background-color: transparent;
    "
  />

  <div
    aria-hidden="true"
    class="pointer-events-none absolute -inset-px rounded-md opacity-0 transition duration-300"
    style="
      background: radial-gradient(600px circle at 24px 103px, rgba(97, 97, 97, 0.1), transparent 60%);
    "
  >
  </div>
  <a href={`/proyecto${url}`}
    ><img
      transition:name={img}
      class="aspect-video max-w-80 rounded-md"
      src={`/${img}`}
    /></a
  >

  <h3
    transition:name={`title-${slug}`}
    class="hover:underline underline-offset-4 cursor-pointer font-title font-bold w-fit text-light-highlight"
  >
    <a href={`/proyecto${url}`}>{title}</a>
  </h3>
  <p>{desc}</p>
</card>
<script>
  document.addEventListener("astro:page-load", () => {
    const buttons = document.querySelectorAll(".shiny");

    function handleMouseEvents(button) {
      button.addEventListener("mousemove", (e) => {
        const { x, y } = button.getBoundingClientRect();
        const xPos = e.clientX - x;
        const yPos = e.clientY - y;
        button.querySelector("input").style.maskImage =
          `radial-gradient(30% 30px at ${xPos}px ${yPos}px, black 45%, transparent)`;
        button.querySelector("div").style.background =
          `radial-gradient(600px circle at ${xPos}px ${yPos}px, rgba(127, 219, 255, 0.1), transparent 60%)`;
      });
      button.addEventListener("mouseenter", (e) => {
        button.querySelector("input").style.opacity = 1;
        button.querySelector("div").style.opacity = 1;
      });
      button.addEventListener("mouseleave", (e) => {
        button.querySelector("input").style.opacity = 0;
        button.querySelector("div").style.opacity = 0;
      });
    }

    function setupListeners() {
      buttons.forEach(handleMouseEvents);
    }

    setupListeners();
  });
</script>
